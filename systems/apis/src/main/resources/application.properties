# Configuration file
# key = value
# application level

department=PSS - Payment and settlement services
location=Azure
system=RTGS
%prod.department=${department}
%prod.location=${location}
%prod.system=${system}


# Quarkus level
quarkus.container-image.builder=jib
quarkus.container-image.registry=quay.io
quarkus.container-image.group=wael2000
quarkus.container-image.tag=latest
quarkus.container-image.username=wael2000+demo
quarkus.container-image.password=0GMWZKSXJBTBQ8X6HSFIOIN0MGIMMCJV0HD2YH56B7BCXB4CPQOZO781RQYMYUYJ
quarkus.jib.base-jvm-image=registry.access.redhat.com/ubi8/openjdk-17-runtime:1.20-3


%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=postgres@postgresqlserver-fsi
%prod.quarkus.datasource.password=C0mplexP@ssw0rd
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://postgresql:5432/fsi

# https://quarkus.io/guides/all-config
# stop connection pooling to test db resiliency
quarkus.datasource.jdbc.pooling-enabled=true
quarkus.log.category."io.agroal.pool".level=DEBUG

quarkus.datasource.jdbc.min-size=1
quarkus.datasource.jdbc.max-size=2
  # check every 1 minutes
quarkus.datasource.jdbc.idle-removal-interval=1
# max lifetime for a connection
quarkus.datasource.jdbc.max-connection-lifetime=2
# warn after 2 minutes of idle
quarkus.datasource.jdbc.leak-detection-interval=2


# drop and create the database at startup (use `update` to only update the schema)
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.hibernate-orm.sql-load-script=import.sql
# production, init containers will pre-load the data
quarkus.hibernate-orm.database.generation=update

quarkus.hibernate-orm.log.sql=true

%dev.quarkus.http.port=8070
quarkus.http.port=8080

quarkus.http.cors=true

quarkus.http.cors.origins=/.*/
%dev.quarkus.http.cors.origins=/.*/
quarkus.datasource.*.jdbc.telemetry=true
quarkus.datasource.*.jdbc.telemetry.enabled=true
